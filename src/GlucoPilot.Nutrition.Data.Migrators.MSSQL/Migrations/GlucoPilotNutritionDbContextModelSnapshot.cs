// <auto-generated />
using GlucoPilot.Nutrition.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GlucoPilot.Nutrition.Data.Migrators.MSSQL.Migrations
{
    [DbContext(typeof(GlucoPilotNutritionDbContext))]
    partial class GlucoPilotNutritionDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GlucoPilot.Nutrition.Data.Entities.Product", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NutritionDataPer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NutritionDataPreparedPer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("ProductQuantity")
                        .HasColumnType("float");

                    b.Property<string>("ProductQuantityUnit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Quantity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("ServingQuantity")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("GlucoPilot.Nutrition.Data.Entities.Product", b =>
                {
                    b.OwnsOne("GlucoPilot.Nutrition.Data.Entities.Nutriments", "Nutriments", b1 =>
                        {
                            b1.Property<string>("ProductId")
                                .HasColumnType("nvarchar(450)");

                            b1.Property<double?>("Carbohydrates")
                                .HasColumnType("float");

                            b1.Property<string>("CarbohydratesUnit")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<double?>("CarbohydratesValue")
                                .HasColumnType("float");

                            b1.Property<float?>("Energy")
                                .HasColumnType("real");

                            b1.Property<double?>("EnergyKcal")
                                .HasColumnType("float");

                            b1.Property<string>("EnergyKcalUnit")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<double?>("EnergyKcalValue")
                                .HasColumnType("float");

                            b1.Property<double?>("EnergyKcalValueComputed")
                                .HasColumnType("float");

                            b1.Property<string>("EnergyUnit")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<double?>("EnergyValue")
                                .HasColumnType("float");

                            b1.Property<float?>("Fat")
                                .HasColumnType("real");

                            b1.Property<string>("FatUnit")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<float?>("FatValue")
                                .HasColumnType("real");

                            b1.Property<float?>("Proteins")
                                .HasColumnType("real");

                            b1.Property<string>("ProteinsUnit")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<float?>("ProteinsValue")
                                .HasColumnType("real");

                            b1.HasKey("ProductId");

                            b1.ToTable("Products");

                            b1.WithOwner()
                                .HasForeignKey("ProductId");
                        });

                    b.Navigation("Nutriments");
                });
#pragma warning restore 612, 618
        }
    }
}
